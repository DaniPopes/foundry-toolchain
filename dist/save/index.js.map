{"version":3,"file":"index.js","mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1BA;;;;;;;;AAQA;;;;;;;;;;ACRA;;;;;;;;AAAA;;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;;;;AEDA;AACA;AACA;AACA","sources":["../webpack://@foundry-rs/foundry-toolchain/./src/cache.js","../webpack://@foundry-rs/foundry-toolchain/./src/save.js","../webpack://@foundry-rs/foundry-toolchain/../../../../../usr/local/lib/node_modules/@vercel/ncc/dist/ncc/@@notfound.js","../webpack://@foundry-rs/foundry-toolchain/external node-commonjs \"fs\"","../webpack://@foundry-rs/foundry-toolchain/external node-commonjs \"os\"","../webpack://@foundry-rs/foundry-toolchain/external node-commonjs \"path\"","../webpack://@foundry-rs/foundry-toolchain/webpack/bootstrap","../webpack://@foundry-rs/foundry-toolchain/webpack/runtime/compat","../webpack://@foundry-rs/foundry-toolchain/webpack/before-startup","../webpack://@foundry-rs/foundry-toolchain/webpack/startup","../webpack://@foundry-rs/foundry-toolchain/webpack/after-startup"],"sourcesContent":["const cache = require(\"@actions/cache\");\nconst github = require(\"@actions/github\");\nconst fs = require(\"fs\");\nconst os = require(\"os\");\nconst path = require(\"path\");\n\nconst HOME = os.homedir();\nconst PLATFORM = os.platform();\nconst CACHE_PATHS = [path.join(HOME, \".foundry/cache/rpc\")];\n\nasync function restoreRPCCache() {\n  const key = PLATFORM + \"-foundry-chain-fork-\" + github.context.sha;\n  const restoreKeys = [PLATFORM + \"-foundry-chain-fork-\"];\n  await cache.restoreCache(CACHE_PATHS, key, restoreKeys);\n}\n\nasync function saveCache() {\n  const key = PLATFORM + \"-foundry-chain-fork-\" + github.context.sha;\n  if (fs.existsSync(CACHE_PATHS[0])) {\n    await cache.saveCache(CACHE_PATHS, key);\n  }\n}\n\nmodule.exports = {\n  restoreRPCCache,\n  saveCache,\n};\n",null,null,"module.exports = require(\"fs\");","module.exports = require(\"os\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/\";","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(353);\n",""],"names":[],"sourceRoot":""}